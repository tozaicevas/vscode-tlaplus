{
    "name": "vscode-tlaplus-fork",
    "displayName": "TLA+ fork",
    "version": "1.5.0",
    "description": "TLA+ language support",
    "publisher": "alygin",
    "license": "MIT",
    "author": {
        "name": "Andrew Lygin"
    },
    "engines": {
        "vscode": "^1.38.0"
    },
    "categories": [
        "Programming Languages",
        "Snippets",
        "Formatters",
        "Other"
    ],
    "repository": {
        "type": "git",
        "url": "https://github.com/alygin/vscode-tlaplus.git"
    },
    "bugs": {
        "url": "https://github.com/alygin/vscode-tlaplus/issues"
    },
    "icon": "resources/images/tlaplus.png",
    "keywords": [
        "TLA+",
        "PlusCal",
        "TLC",
        "Formal models",
        "Specification",
        "Modeling"
    ],
    "activationEvents": [
        "onLanguage:tlaplus",
        "onCommand:tlaplus.parse",
        "onCommand:tlaplus.model.check.run",
        "onCommand:tlaplus.model.check.runDeadlock",
        "onCommand:tlaplus.model.check.customRun",
        "onCommand:tlaplus.exportToTex",
        "onCommand:tlaplus.exportToPdf",
        "onCommand:tlaplus.evaluateSelection",
        "onCommand:tlaplus.evaluateExpression",
        "workspaceContains:**/*.tla"
    ],
    "main": "./out/src/main.js",
    "filse": [
        "resources",
        "tools"
    ],
    "contributes": {
        "languages": [
            {
                "id": "tlaplus",
                "aliases": [
                    "TLA+",
                    "tlaplus"
                ],
                "extensions": [
                    ".tla"
                ],
                "configuration": "./languages/tlaplus-lang-config.json"
            },
            {
                "id": "pluscal",
                "aliases": [
                    "PlusCal",
                    "pluscal"
                ],
                "extensions": [],
                "configuration": "./languages/pluscal-lang-config.json"
            },
            {
                "id": "tlaplus_cfg",
                "aliases": [],
                "extensions": [
                    ".cfg"
                ],
                "configuration": "./languages/cfg-lang-config.json"
            },
            {
                "id": "tlaplus_out",
                "extensions": [
                    ".out"
                ]
            }
        ],
        "grammars": [
            {
                "language": "tlaplus",
                "scopeName": "source.tlaplus",
                "path": "./languages/tlaplus-grammar.json"
            },
            {
                "language": "pluscal",
                "scopeName": "source.tlaplus.pluscal",
                "path": "./languages/pluscal-grammar.json"
            },
            {
                "language": "tlaplus_cfg",
                "scopeName": "source.tlaplus.cfg",
                "path": "./languages/cfg-grammar.json"
            },
            {
                "language": "tlaplus_out",
                "scopeName": "source.tlaplus.out",
                "path": "./languages/out-grammar.json"
            }
        ],
        "commands": [
            {
                "command": "tlaplus.parse",
                "title": "Parse module",
                "category": "TLA+"
            },
            {
                "command": "tlaplus.exportToTex",
                "title": "Export module to LaTeX",
                "category": "TLA+"
            },
            {
                "command": "tlaplus.exportToPdf",
                "title": "Export module to PDF",
                "category": "TLA+"
            },
            {
                "command": "tlaplus.model.check.run",
                "title": "Check model with TLC",
                "category": "TLA+"
            },
            {
                "command": "tlaplus.model.check.runDeadlock",
                "title": "Check model with TLC (ignore deadlock)",
                "category": "TLA+"
            },
            {
                "command": "tlaplus.model.check.customRun",
                "title": "Check model with TLC using non-default config...",
                "category": "TLA+"
            },
            {
                "command": "tlaplus.model.check.runAgain",
                "title": "Run last model check again",
                "category": "TLA+"
            },
            {
                "command": "tlaplus.model.check.stop",
                "title": "Stop model checking process",
                "category": "TLA+"
            },
            {
                "command": "tlaplus.model.check.display",
                "title": "Display model checking panel",
                "category": "TLA+"
            },
            {
                "command": "tlaplus.out.visualize",
                "title": "Visualize TLC output",
                "category": "TLA+"
            },
            {
                "command": "tlaplus.evaluateSelection",
                "title": "Evaluate selected expression",
                "category": "TLA+",
                "enablement": "editorHasSelection"
            },
            {
                "command": "tlaplus.evaluateExpression",
                "title": "Evaluate expression...",
                "category": "TLA+"
            }
        ],
        "snippets": [
            {
                "language": "tlaplus",
                "scopeName": "source.tlaplus.pluscal",
                "path": "./languages/pluscal-snippets.json"
            },
            {
                "language": "tlaplus",
                "scopeName": "source.tlaplus",
                "path": "./languages/tlaplus-snippets.json"
            }
        ],
        "menus": {
            "commandPalette": [
                {
                    "command": "tlaplus.parse",
                    "when": "editorLangId == tlaplus"
                },
                {
                    "command": "tlaplus.exportToTex",
                    "when": "editorLangId == tlaplus"
                },
                {
                    "command": "tlaplus.exportToPdf",
                    "when": "editorLangId == tlaplus"
                },
                {
                    "command": "tlaplus.model.check.run",
                    "when": "editorLangId == tlaplus || editorLangId == tlaplus_cfg"
                },
                {
                    "command": "tlaplus.model.check.runDeadlock",
                    "when": "editorLangId == tlaplus || editorLangId == tlaplus_cfg"
                },
                {
                    "command": "tlaplus.model.check.runAgain",
                    "when": "tlaplus.tlc.canRunAgain"
                },
                {
                    "command": "tlaplus.model.check.customRun",
                    "when": "editorLangId == tlaplus"
                },
                {
                    "command": "tlaplus.model.check.stop",
                    "when": "tlaplus.tlc.isRunning"
                },
                {
                    "command": "tlaplus.out.visualize",
                    "when": "resourceExtname == .out"
                },
                {
                    "command": "tlaplus.evaluateSelection",
                    "when": "editorLangId == tlaplus"
                },
                {
                    "command": "tlaplus.evaluateExpression",
                    "when": "editorLangId == tlaplus"
                }
            ],
            "explorer/context": [
                {
                    "command": "tlaplus.model.check.run",
                    "when": "resourceLangId == tlaplus || resourceLangId == tlaplus_cfg",
                    "group": "z_commands"
                },
                {
                    "command": "tlaplus.model.check.runDeadlock",
                    "when": "editorLangId == tlaplus || editorLangId == tlaplus_cfg",
                    "group": "z_commands"
                }
            ],
            "editor/context": [
                {
                    "command": "tlaplus.model.check.run",
                    "when": "editorLangId == tlaplus || editorLangId == tlaplus_cfg",
                    "group": "z_commands"
                },
                {
                    "command": "tlaplus.model.check.runDeadlock",
                    "when": "editorLangId == tlaplus || editorLangId == tlaplus_cfg",
                    "group": "z_commands"
                },
                {
                    "command": "tlaplus.out.visualize",
                    "when": "resourceExtname == .out",
                    "group": "z_commands"
                },
                {
                    "command": "tlaplus.evaluateSelection",
                    "when": "editorLangId == tlaplus",
                    "group": "z_commands"
                }
            ]
        },
        "configuration": {
            "type": "object",
            "title": "TLA+",
            "properties": {
                "tlaplus.java.home": {
                    "type": "string",
                    "scope": "window",
                    "default": "",
                    "format": "uri",
                    "description": "Path to Java (8 or higher, 11 is recommended) home directory that should be used to run TLA+ tools.",
                    "maxLength": 1000
                },
                "tlaplus.java.options": {
                    "type": "string",
                    "scope": "window",
                    "default": "",
                    "markdownDescription": "Java options to use when running TLA+ tools. [How it works.](https://github.com/alygin/vscode-tlaplus/wiki/Java-Options)",
                    "maxLength": 1000
                },
                "tlaplus.pluscal.options": {
                    "type": "string",
                    "scope": "window",
                    "default": "",
                    "description": "Additional options to pass to PlusCal transpiler.",
                    "maxLength": 1000
                },
                "tlaplus.tlc.modelChecker.options": {
                    "type": "string",
                    "scope": "window",
                    "default": "",
                    "description": "Additional options to pass to TLC.",
                    "maxLength": 1000
                },
                "tlaplus.tlc.modelChecker.createOutFiles": {
                    "type": "boolean",
                    "scope": "window",
                    "default": true,
                    "description": "Send TLC output to .out file."
                },
                "tlaplus.tlc.statisticsSharing": {
                    "type": "string",
                    "scope": "machine",
                    "default": "doNotShare",
                    "markdownDescription": "Allows you to send the TLC usage statistics to [the publicly available database](https://exec-stats.tlapl.us). You can find more details on what is shared [here](https://github.com/tlaplus/tlaplus/blob/master/tlatools/src/util/ExecutionStatisticsCollector.md).",
                    "enum": [
                        "share",
                        "shareWithoutId",
                        "doNotShare"
                    ],
                    "enumDescriptions": [
                        "TLC statistics will be shared along with the installation ID.",
                        "TLC statistics will be shared witout the installation ID.",
                        "No TLC statistics will be shared."
                    ]
                },
                "tlaplus.pdf.convertCommand": {
                    "default": "pdflatex",
                    "type": "string",
                    "scope": "application",
                    "maxLength": 1000,
                    "description": "Command to produce PDFs from .tex files."
                }
            }
        },
        "configurationDefaults": {
            "[tlaplus]": {
                "editor.insertSpaces": true,
                "editor.tabSize": 4,
                "editor.formatOnType": true,
                "editor.detectIndentation": false
            },
            "[tlaplus_cfg]": {
                "editor.insertSpaces": true,
                "editor.tabSize": 4,
                "editor.formatOnType": true,
                "editor.detectIndentation": false
            }
        }
    },
    "scripts": {
        "vscode:prepublish": "npm run compile",
        "compile": "tsc -p ./",
        "lint": "tslint -p ./",
        "lint-fix": "node ./node_modules/tslint/bin/tslint --fix --project ./tsconfig.json",
        "watch": "tsc -watch -p ./",
        "pretest": "npm run compile",
        "test": "node ./out/tests/runTest.js"
    },
    "devDependencies": {
        "@types/glob": "^7.1.1",
        "@types/mocha": "^5.2.7",
        "@types/node": "^8.10.51",
        "@types/vscode": "^1.38.0",
        "glob": "^7.1.6",
        "mocha": "^6.2.2",
        "source-map-support": "^0.5.16",
        "tslint": "^5.20.0",
        "typescript": "^3.7.5",
        "vscode-test": "^1.3.0"
    },
    "dependencies": {
        "moment": "^2.24.0"
    }
}
